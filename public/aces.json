{
  "$schema": "../schemas/aces.schema.json",

  "authentication": {
    "actions": [
      {
        "id": "log_in-anonymously",
        "scriptName": "LogInAnonymously",
        "highlight": true,
        "isAsync": true
      },
      {
        "id": "log_in-credentials",
        "scriptName": "LogInWithCredentials",
        "params": [
          {
            "id": "email_address",
            "type": "string"
          },
          {
            "id": "password",
            "type": "string"
          }
        ],
        "isAsync": true
      },
      {
        "id": "register-credentials",
        "scriptName": "RegisterWithCredentials",
        "params": [
          {
            "id": "email_address",
            "type": "string"
          },
          {
            "id": "password",
            "type": "string"
          }
        ],
        "isAsync": true
      },
      {
        "id": "log_out",
        "scriptName": "LogOut",
        "isAsync": true
      },

      {
        "id": "user-refresh",
        "scriptName": "RefreshUser",
        "isAsync": true
      },

      {
        "id": "user-username-set",
        "scriptName": "SetUsername",
        "params": [{
          "id": "username",
          "type": "string"
        }],
        "isAsync": true
      },
      {
        "id": "user-email_address-set",
        "scriptName": "SetEmailAddress",
        "params": [{
          "id": "email_address",
          "type": "string"
        }],
        "isAsync": true
      },

      {
        "id": "user-property-set",
        "scriptName": "SetUserProperty",
        "params": [
          {
            "id": "property",
            "type": "string"
          },
          {
            "id": "value",
            "type": "any"
          }
        ],
        "isAsync": true
      }
    ],
    "conditions": [
      {
        "id": "is-user-logged_in",
        "scriptName": "IsUserLoggedIn",
        "highlight": true
      },

      {
        "id": "user-login-trigger",
        "scriptName": "TriggerOnUserLogin",
        "highlight": true,
        "isTrigger": true
      },
      {
        "id": "user-logout-trigger",
        "scriptName": "TriggerOnUserLogout",
        "isTrigger": true
      },

      {
        "id": "user-refresh-trigger",
        "scriptName": "TriggerOnUserRefresh",
        "isTrigger": true
      },

      {
        "id": "user-username-set-trigger",
        "scriptName": "TriggerOnUsernameSet",
        "isTrigger": true
      },
      {
        "id": "user-email_address-set-trigger",
        "scriptName": "TriggerOnEmailAddressSet",
        "isTrigger": true
      },

      {
        "id": "user-any-property-set-trigger",
        "scriptName": "TriggerOnUserPropertySet",
        "isTrigger": true
      },
      {
        "id": "user-specific-property-set-trigger",
        "scriptName": "TriggerOnUserPropertySet",
        "params": [{
          "id": "property",
          "type": "string"
        }],
        "isTrigger": true
      },

      {
        "id": "is-user-new",
        "scriptName": "IsNewUser"
      },

      {
        "id": "is-user-anonymous",
        "scriptName": "IsUserAnonymous"
      }
    ],
    "expressions": [
      {
        "id": "user-id",
        "expressionName": "UserId",
        "returnType": "string"
      },
      {
        "id": "user-email_address",
        "expressionName": "EmailAddress",
        "returnType": "string"
      },
      {
        "id": "user-username",
        "expressionName": "Username",
        "returnType": "string",
        "highlight": true
      },

      {
        "id": "user-property-get",
        "expressionName": "GetUserProperty",
        "params": [{
          "id": "property",
          "type": "string"
        }],
        "returnType": "any",
        "highlight": true
      },

      {
        "id": "user-property",
        "expressionName": "UserProperty",
        "returnType": "string"
      }
    ]
  },
  "error-handling": {
    "conditions": [
      {
        "id": "error-action-trigger",
        "scriptName": "TriggerOnErrorAction",
        "params": [{
          "id": "action",
          "type": "combo",
          "items": [
            "LogInAnonymously",
            "LogInWithCredentials",
            "RegisterWithCredentials",
            "RefreshUser",
            "SetUsername",
            "SetEmailAddress",
            "SetUserProperty",
            "LogOut",
            "LoadLeaderboard",
            "SaveScore",
            "Initialize",
            "SendMessageToParent",
            "SubmitPollAnswer"
          ]
        }],
        "highlight": true,
        "isTrigger": true
      },

      {
        "id": "error-code-any-trigger",
        "scriptName": "TriggerOnErrorCode",
        "isTrigger": true
      },
      {
        "id": "error-code-specific-trigger",
        "scriptName": "TriggerOnErrorCode",
        "params": [{
          "id": "code",
          "type": "combo",
          "items": [
            "UNKNOWN_ERROR",
            "IMPLEMENTATION_ERROR",
            "NOT_INITIALIZED",
            "ALREADY_INITIALIZED",
            "MISSING_CONFIGURATION",
            "NETWORK_ERROR",
            "REQUEST_ERROR",
            "TIMEOUT_ERROR",
            "NOT_AUTHENTICATED",
            "NOT_AUTHORIZED",
            "INVALID_CREDENTIALS",
            "ALREADY_AUTHENTICATED",
            "USER_NOT_FOUND",
            "USER_ALREADY_EXISTS",
            "LEADERBOARD_NOT_FOUND"
          ]
        }],
        "isTrigger": true
      }
    ],
    "expressions": [
      {
        "id": "error-code",
        "expressionName": "ErrorCode",
        "highlight": true,
        "returnType": "string"
      },

      {
        "id": "error_type-unknown",
        "expressionName": "XError_Unknown",
        "highlight": true,
        "returnType": "string"
      },
      {
        "id": "error_type-implementation",
        "expressionName": "XError_Implementation",
        "returnType": "string"
      },

      {
        "id": "error_type-not_initialized",
        "expressionName": "XError_NotInitialized",
        "returnType": "string"
      },
      {
        "id": "error_type-already_initialized",
        "expressionName": "XError_AlreadyInitialized",
        "returnType": "string"
      },

      {
        "id": "error_type-missing_configuration",
        "expressionName": "XError_MissingConfiguration",
        "returnType": "string"
      },

      {
        "id": "error_type-network",
        "expressionName": "XError_NetworkError",
        "returnType": "string"
      },
      {
        "id": "error_type-request",
        "expressionName": "XError_RequestError",
        "returnType": "string"
      },
      {
        "id": "error_type-timeout",
        "expressionName": "XError_TimeoutError",
        "returnType": "string"
      },

      {
        "id": "error_type-not_authenticated",
        "expressionName": "XError_NotAuthenticated",
        "returnType": "string"
      },
      {
        "id": "error_type-not_authorized",
        "expressionName": "XError_NotAuthorized",
        "returnType": "string"
      },

      {
        "id": "error_type-invalid_credentials",
        "expressionName": "XError_InvalidCredentials",
        "returnType": "string"
      },
      {
        "id": "error_type-already_authenticated",
        "expressionName": "XError_AlreadyAuthenticated",
        "returnType": "string"
      },

      {
        "id": "error_type-user_not_found",
        "expressionName": "XError_UserNotFound",
        "returnType": "string"
      },
      {
        "id": "error_type-user_already_exists",
        "expressionName": "XError_UserAlreadyExists",
        "returnType": "string"
      },

      {
        "id": "error_type-leaderboard_not_found",
        "expressionName": "XError_LeaderboardNotFound",
        "returnType": "string"
      }
    ]
  },
  "integration": {
    "actions": [{
      "id": "send-message-to-parent",
      "scriptName": "SendMessageToParent",
      "params": [
        {
          "id": "target",
          "type": "string",
          "initialValue": "/"
        },
        {
          "id": "payload",
          "type": "object",
          "allowedPluginIds": ["Json"]
        },
        {
          "id": "empty",
          "type": "boolean",
          "defaultValue": false
        }
      ],
      "highlight": true,
      "isAsync": true
    }],
    "conditions": [
      {
        "id": "message-from-parent-received-trigger",
        "scriptName": "TriggerOnMessageFromParentReceived",
        "params": [{
          "id": "json_ref",
          "type": "object",
          "allowedPluginIds": ["Json"]
        }],
        "highlight": true,
        "isTrigger": true
      },
      {
        "id": "typed-message-from-parent-received-trigger",
        "scriptName": "TriggerOnMessageFromParentReceived",
        "params": [
          {
            "id": "json_ref",
            "type": "object",
            "allowedPluginIds": ["Json"]
          },
          {
            "id": "type",
            "type": "string"
          }
        ],
        "isTrigger": true
      },

      {
        "id": "message-to-parent-sent-trigger",
        "scriptName": "TriggerOnMessageToParentSent",
        "isTrigger": true
      }
    ]
  },
  "leaderboard": {
    "actions": [
      {
        "id": "load-leaderboard",
        "scriptName": "LoadLeaderboard",
        "params": [{
          "id": "json_ref",
          "type": "object",
          "allowedPluginIds": ["Json"]
        }],
        "isAsync": true
      },
      {
        "id": "load-level-leaderboard",
        "scriptName": "LoadLeaderboard",
        "params": [
          {
            "id": "json_ref",
            "type": "object",
            "allowedPluginIds": ["Json"]
          },
          {
            "id": "level",
            "type": "string"
          }
        ],
        "isAsync": true,
        "isDeprecated": true
      },

      {
        "id": "save-score",
        "scriptName": "SaveScore",
        "params": [{
          "id": "score",
          "type": "number"
        }],
        "highlight": true,
        "isAsync": true
      },
      {
        "id": "save-score-payload",
        "scriptName": "SaveScore",
        "params": [
          {
            "id": "score",
            "type": "number"
          },
          {
            "id": "payload",
            "type": "object",
            "allowedPluginIds": ["Json"]
          },
          {
            "id": "empty",
            "type": "boolean",
            "defaultValue": false
          }
        ],
        "isAsync": true
      },

      {
        "id": "save-score-load-leaderboard",
        "scriptName": "SaveScoreLoadLeaderboard",
        "params": [
          {
            "id": "score",
            "type": "number"
          },
          {
            "id": "json_ref",
            "type": "object",
            "allowedPluginIds": ["Json"]
          }
        ],
        "isAsync": true
      },
      {
        "id": "save-score-payload-load-leaderboard",
        "scriptName": "SaveScoreLoadLeaderboard",
        "params": [
          {
            "id": "score",
            "type": "number"
          },
          {
            "id": "json_ref",
            "type": "object",
            "allowedPluginIds": ["Json"]
          },
          {
            "id": "payload",
            "type": "object",
            "allowedPluginIds": ["Json"]
          },
          {
            "id": "empty",
            "type": "boolean",
            "defaultValue": false
          }
        ],
        "isAsync": true
      },

      {
        "id": "save-level-score",
        "scriptName": "SaveLevelScore",
        "params": [
          {
            "id": "level",
            "type": "string"
          },
          {
            "id": "score",
            "type": "number"
          }
        ],
        "isAsync": true
      },
      {
        "id": "save-level-score-payload",
        "scriptName": "SaveLevelScore",
        "params": [
          {
            "id": "level",
            "type": "string"
          },
          {
            "id": "score",
            "type": "number"
          },
          {
            "id": "payload",
            "type": "object",
            "allowedPluginIds": ["Json"]
          },
          {
            "id": "empty",
            "type": "boolean",
            "defaultValue": false
          }
        ],
        "isAsync": true
      },

      {
        "id": "save-level-score-load-leaderboard",
        "scriptName": "SaveLevelScoreLoadLeaderboard",
        "params": [
          {
            "id": "level",
            "type": "string"
          },
          {
            "id": "score",
            "type": "number"
          },
          {
            "id": "json_ref",
            "type": "object",
            "allowedPluginIds": ["Json"]
          }
        ],
        "isAsync": true
      },
      {
        "id": "save-level-score-payload-load-leaderboard",
        "scriptName": "SaveLevelScoreLoadLeaderboard",
        "params": [
          {
            "id": "level",
            "type": "string"
          },
          {
            "id": "score",
            "type": "number"
          },
          {
            "id": "json_ref",
            "type": "object",
            "allowedPluginIds": ["Json"]
          },
          {
            "id": "payload",
            "type": "object",
            "allowedPluginIds": ["Json"]
          },
          {
            "id": "empty",
            "type": "boolean",
            "defaultValue": false
          }
        ],
        "isAsync": true
      }
    ],
    "conditions": [
      {
        "id": "leaderboard-loaded-trigger",
        "scriptName": "TriggerOnLeaderboardLoaded",
        "highlight": true,
        "isTrigger": true
      },
      {
        "id": "score-saved-trigger",
        "scriptName": "TriggerOnScoreSaved",
        "isTrigger": true
      }
    ]
  },
  "log-events": {
    "actions": [
      {
        "id": "log-event",
        "scriptName": "LogEvent",
        "highlight": true,
        "params": [{
          "id": "type",
          "type": "string"
        }]
      },
      {
        "id": "log-event-payload",
        "scriptName": "LogEvent",
        "params": [
          {
            "id": "type",
            "type": "string"
          },
          {
            "id": "payload",
            "type": "object",
            "allowedPluginIds": ["Json"]
          },
          {
            "id": "empty",
            "type": "boolean",
            "defaultValue": false
          }
        ]
      },

      {
        "id": "log-game_start-event",
        "scriptName": "LogGameStartEvent",
        "highlight": true
      },
      {
        "id": "log-game_start-event-payload",
        "scriptName": "LogGameStartEvent",
        "params": [
          {
            "id": "payload",
            "type": "object",
            "allowedPluginIds": ["Json"]
          },
          {
            "id": "empty",
            "type": "boolean",
            "defaultValue": false
          }
        ]
      },

      {
        "id": "log-game_finish-event",
        "scriptName": "LogGameFinishEvent"
      },
      {
        "id": "log-game_finish-event-payload",
        "scriptName": "LogGameFinishEvent",
        "params": [
          {
            "id": "payload",
            "type": "object",
            "allowedPluginIds": ["Json"]
          },
          {
            "id": "empty",
            "type": "boolean",
            "defaultValue": false
          }
        ]
      }
    ]
  },
  "management": {
    "actions": [{
      "id": "initialize",
      "scriptName": "Initialize",
      "highlight": true,
      "isAsync": true
    }],
    "conditions": [
      {
        "id": "is-initialized",
        "scriptName": "IsInitialized"
      },
      {
        "id": "initialized-trigger",
        "scriptName": "TriggerOnInitialized",
        "highlight": true,
        "isTrigger": true
      },

      {
        "id": "is-device-new",
        "scriptName": "IsNewDevice"
      }
    ]
  },
  "polls": {
    "actions": [
      {
        "id": "submit-poll-answer",
        "scriptName": "SubmitPollAnswer",
        "params": [
          {
            "id": "question_id",
            "type": "number"
          },
          {
            "id": "answer",
            "type": "any"
          }
        ],
        "highlight": true,
        "isAsync": true
      },
      {
        "id": "submit-poll-answer-payload",
        "scriptName": "SubmitPollAnswer",
        "params": [
          {
            "id": "question_id",
            "type": "number"
          },
          {
            "id": "answer",
            "type": "any"
          },
          {
            "id": "payload",
            "type": "object",
            "allowedPluginIds": ["Json"]
          },
          {
            "id": "empty",
            "type": "boolean",
            "defaultValue": false
          }
        ],
        "isAsync": true
      }
    ],
    "conditions": [{
      "id": "poll-answer-submitted-trigger",
      "scriptName": "TriggerOnPollAnswerSubmitted",
      "highlight": true,
      "isTrigger": true
    }]
  }
}
